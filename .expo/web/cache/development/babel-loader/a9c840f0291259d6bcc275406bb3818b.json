{"ast":null,"code":"import React from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport MealItem from \"../components/MealItem\";\nimport colors from \"../constants/colors\";\nimport { CATEGORIES, MEALS } from \"../data/dummy-data\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar CategoryMealsScreen = function CategoryMealsScreen(props) {\n  var renderMealItem = function renderMealItem(itemData) {\n    return _jsx(MealItem, {\n      title: itemData.item.title,\n      onSelectMeal: function onSelectMeal() {\n        props.navigation.navigate({\n          routeName: \"MealDetail\",\n          params: {\n            mealId: itemData.item.id\n          }\n        });\n      },\n      duration: itemData.item.duration,\n      complexity: itemData.item.complexity.toUpperCase(),\n      affordability: itemData.item.affordability.toUpperCase(),\n      image: itemData.item.imageUrl\n    });\n  };\n\n  var catId = props.navigation.getParam(\"categoryId\");\n  var displayedMeals = MEALS.filter(function (meal) {\n    return meal.categoryIds.indexOf(catId) >= 0;\n  });\n  return _jsx(View, {\n    style: styles.screen,\n    children: _jsx(FlatList, {\n      data: displayedMeals,\n      keyExtractor: function keyExtractor(item, index) {\n        return item.id;\n      },\n      renderItem: renderMealItem,\n      style: {\n        width: \"100%\"\n      }\n    })\n  });\n};\n\nCategoryMealsScreen.navigationOptions = function (navigationData) {\n  var catId = navigationData.navigation.getParam(\"categoryId\");\n  var selectedCategory = CATEGORIES.find(function (cat) {\n    return cat.id === catId;\n  });\n  return {\n    headerTitle: selectedCategory.title\n  };\n};\n\nexport default CategoryMealsScreen;\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/ruvidu/r-native/meals-app/screens/CategoryMealsScreen.js"],"names":["React","MealItem","colors","CATEGORIES","MEALS","CategoryMealsScreen","props","renderMealItem","itemData","item","title","navigation","navigate","routeName","params","mealId","id","duration","complexity","toUpperCase","affordability","imageUrl","catId","getParam","displayedMeals","filter","meal","categoryIds","indexOf","styles","screen","index","width","navigationOptions","navigationData","selectedCategory","find","cat","headerTitle","StyleSheet","create","flex","justifyContent","alignItems"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;AASA,OAAOC,QAAP;AACA,OAAOC,MAAP;AACA,SAASC,UAAT,EAAqBC,KAArB;;;AAEA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,KAAD,EAAW;AACrC,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,QAAD,EAAc;AACnC,WACE,KAAC,QAAD;AACE,MAAA,KAAK,EAAEA,QAAQ,CAACC,IAAT,CAAcC,KADvB;AAEE,MAAA,YAAY,EAAE,wBAAM;AAClBJ,QAAAA,KAAK,CAACK,UAAN,CAAiBC,QAAjB,CAA0B;AACxBC,UAAAA,SAAS,EAAE,YADa;AAExBC,UAAAA,MAAM,EAAE;AACNC,YAAAA,MAAM,EAAEP,QAAQ,CAACC,IAAT,CAAcO;AADhB;AAFgB,SAA1B;AAMD,OATH;AAUE,MAAA,QAAQ,EAAER,QAAQ,CAACC,IAAT,CAAcQ,QAV1B;AAWE,MAAA,UAAU,EAAET,QAAQ,CAACC,IAAT,CAAcS,UAAd,CAAyBC,WAAzB,EAXd;AAYE,MAAA,aAAa,EAAEX,QAAQ,CAACC,IAAT,CAAcW,aAAd,CAA4BD,WAA5B,EAZjB;AAaE,MAAA,KAAK,EAAEX,QAAQ,CAACC,IAAT,CAAcY;AAbvB,MADF;AAiBD,GAlBD;;AAoBA,MAAMC,KAAK,GAAGhB,KAAK,CAACK,UAAN,CAAiBY,QAAjB,CAA0B,YAA1B,CAAd;AAEA,MAAMC,cAAc,GAAGpB,KAAK,CAACqB,MAAN,CACrB,UAACC,IAAD;AAAA,WAAUA,IAAI,CAACC,WAAL,CAAiBC,OAAjB,CAAyBN,KAAzB,KAAmC,CAA7C;AAAA,GADqB,CAAvB;AAIA,SACE,KAAC,IAAD;AAAM,IAAA,KAAK,EAAEO,MAAM,CAACC,MAApB;AAAA,cACE,KAAC,QAAD;AACE,MAAA,IAAI,EAAEN,cADR;AAEE,MAAA,YAAY,EAAE,sBAACf,IAAD,EAAOsB,KAAP;AAAA,eAAiBtB,IAAI,CAACO,EAAtB;AAAA,OAFhB;AAGE,MAAA,UAAU,EAAET,cAHd;AAIE,MAAA,KAAK,EAAE;AAAEyB,QAAAA,KAAK,EAAE;AAAT;AAJT;AADF,IADF;AAUD,CArCD;;AAuCA3B,mBAAmB,CAAC4B,iBAApB,GAAwC,UAACC,cAAD,EAAoB;AAC1D,MAAMZ,KAAK,GAAGY,cAAc,CAACvB,UAAf,CAA0BY,QAA1B,CAAmC,YAAnC,CAAd;AACA,MAAMY,gBAAgB,GAAGhC,UAAU,CAACiC,IAAX,CAAgB,UAACC,GAAD;AAAA,WAASA,GAAG,CAACrB,EAAJ,KAAWM,KAApB;AAAA,GAAhB,CAAzB;AAEA,SAAO;AACLgB,IAAAA,WAAW,EAAEH,gBAAgB,CAACzB;AADzB,GAAP;AAGD,CAPD;;AASA,eAAeL,mBAAf;AAEA,IAAMwB,MAAM,GAAGU,UAAU,CAACC,MAAX,CAAkB;AAC/BV,EAAAA,MAAM,EAAE;AACNW,IAAAA,IAAI,EAAE,CADA;AAENC,IAAAA,cAAc,EAAE,QAFV;AAGNC,IAAAA,UAAU,EAAE;AAHN;AADuB,CAAlB,CAAf","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Button,\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  Platform,\r\n  FlatList,\r\n} from \"react-native\";\r\nimport MealItem from \"../components/MealItem\";\r\nimport colors from \"../constants/colors\";\r\nimport { CATEGORIES, MEALS } from \"../data/dummy-data\";\r\n\r\nconst CategoryMealsScreen = (props) => {\r\n  const renderMealItem = (itemData) => {\r\n    return (\r\n      <MealItem\r\n        title={itemData.item.title}\r\n        onSelectMeal={() => {\r\n          props.navigation.navigate({\r\n            routeName: \"MealDetail\",\r\n            params: {\r\n              mealId: itemData.item.id,\r\n            },\r\n          });\r\n        }}\r\n        duration={itemData.item.duration}\r\n        complexity={itemData.item.complexity.toUpperCase()}\r\n        affordability={itemData.item.affordability.toUpperCase()}\r\n        image={itemData.item.imageUrl}\r\n      />\r\n    );\r\n  };\r\n\r\n  const catId = props.navigation.getParam(\"categoryId\");\r\n\r\n  const displayedMeals = MEALS.filter(\r\n    (meal) => meal.categoryIds.indexOf(catId) >= 0\r\n  );\r\n\r\n  return (\r\n    <View style={styles.screen}>\r\n      <FlatList\r\n        data={displayedMeals}\r\n        keyExtractor={(item, index) => item.id}\r\n        renderItem={renderMealItem}\r\n        style={{ width: \"100%\" }}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nCategoryMealsScreen.navigationOptions = (navigationData) => {\r\n  const catId = navigationData.navigation.getParam(\"categoryId\");\r\n  const selectedCategory = CATEGORIES.find((cat) => cat.id === catId);\r\n\r\n  return {\r\n    headerTitle: selectedCategory.title,\r\n  };\r\n};\r\n\r\nexport default CategoryMealsScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  screen: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}