{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { HeaderButtons, Item } from \"react-navigation-header-buttons\";\nimport CustomHeaderButton from \"../components/HeaderButton\";\nimport colors from \"../constants/colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar FilterSwitch = function FilterSwitch(props) {\n  return _jsxs(View, {\n    style: styles.filterCon,\n    children: [_jsx(Text, {\n      children: props.label\n    }), _jsx(Switch, {\n      trackColor: {\n        true: colors.primaryColor\n      },\n      thumbColor: Platform.OS === \"android\" ? colors.primaryColor : \"\",\n      value: props.state,\n      onValueChange: props.onChange\n    })]\n  });\n};\n\nexport default function FiltersScreen() {\n  var _props = props,\n      navigation = _props.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isGlutenFree = _useState2[0],\n      setIsGlutenFree = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLactoseFree = _useState4[0],\n      setIsLactoseFree = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isVegan = _useState6[0],\n      setIsVegan = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isVegetarian = _useState8[0],\n      setIsVegetarian = _useState8[1];\n\n  var saveFilters = useCallback(function () {\n    var appliedFilters = {\n      glutenFree: isGlutenFree,\n      lactoseFree: isLactoseFree,\n      vegan: isVegan,\n      vegetarian: isVegetarian\n    };\n    console.log(appliedFilters);\n  }, [isGlutenFree, isLactoseFree, isVegan, isVegetarian]);\n  useEffect(function () {\n    navigation.setParams({\n      save: saveFilters\n    });\n  }, [saveFilters, navigation]);\n  return _jsxs(View, {\n    style: styles.screen,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Filters\"\n    }), _jsx(FilterSwitch, {\n      label: \"Gluten Free\",\n      state: isGlutenFree,\n      onChange: function onChange(newValue) {\n        return setIsGlutenFree(newValue);\n      }\n    }), _jsx(FilterSwitch, {\n      label: \"Lactose Free\",\n      state: isLactoseFree,\n      onChange: function onChange(newValue) {\n        return setIsLactoseFree(newValue);\n      }\n    }), _jsx(FilterSwitch, {\n      label: \"Vegan\",\n      state: isVegan,\n      onChange: function onChange(newValue) {\n        return setIsVegan(newValue);\n      }\n    }), _jsx(FilterSwitch, {\n      label: \"Vegetarian\",\n      state: isVegetarian,\n      onChange: function onChange(newValue) {\n        return setIsVegetarian(newValue);\n      }\n    })]\n  });\n}\n\nFiltersScreen.navigationOptions = function (navData) {\n  return {\n    headerTitle: \"Filter Meals\",\n    headerLeft: _jsx(HeaderButtons, {\n      HeaderButtonComponent: CustomHeaderButton,\n      children: _jsx(Item, {\n        title: \"menu\",\n        iconName: \"ios-menu\",\n        onPress: function onPress() {\n          navData.navigation.toggleDrawer();\n        }\n      })\n    }),\n    headerRight: _jsx(HeaderButtons, {\n      HeaderButtonComponent: CustomHeaderButton,\n      children: _jsx(Item, {\n        title: \"save\",\n        iconName: \"ios-save\",\n        onPress: navData.navigation.getParams(\"save\")\n      })\n    })\n  };\n};\n\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    alignItems: \"center\"\n  },\n  title: {\n    fontFamily: \"open-sans-bold\",\n    fontSize: 22,\n    margin: 20,\n    textAlign: \"center\"\n  },\n  filterCon: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    width: \"80%\",\n    marginVertical: 10\n  }\n});","map":{"version":3,"sources":["C:/ruvidu/r-native/meals-app/screens/FiltersScreen.js"],"names":["React","useCallback","useEffect","useState","HeaderButtons","Item","CustomHeaderButton","colors","FilterSwitch","props","styles","filterCon","label","true","primaryColor","Platform","OS","state","onChange","FiltersScreen","navigation","isGlutenFree","setIsGlutenFree","isLactoseFree","setIsLactoseFree","isVegan","setIsVegan","isVegetarian","setIsVegetarian","saveFilters","appliedFilters","glutenFree","lactoseFree","vegan","vegetarian","console","log","setParams","save","screen","title","newValue","navigationOptions","navData","headerTitle","headerLeft","toggleDrawer","headerRight","getParams","StyleSheet","create","flex","alignItems","fontFamily","fontSize","margin","textAlign","flexDirection","justifyContent","width","marginVertical"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { StyleSheet, Text, View, Switch, Platform } from \"react-native\";\r\nimport { HeaderButtons, Item } from \"react-navigation-header-buttons\";\r\nimport CustomHeaderButton from \"../components/HeaderButton\";\r\nimport colors from \"../constants/colors\";\r\n\r\nconst FilterSwitch = (props) => {\r\n  return (\r\n    <View style={styles.filterCon}>\r\n      <Text>{props.label}</Text>\r\n      <Switch\r\n        trackColor={{ true: colors.primaryColor }}\r\n        thumbColor={Platform.OS === \"android\" ? colors.primaryColor : \"\"}\r\n        value={props.state}\r\n        onValueChange={props.onChange}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default function FiltersScreen() {\r\n  const { navigation } = props;\r\n\r\n  const [isGlutenFree, setIsGlutenFree] = useState(false);\r\n  const [isLactoseFree, setIsLactoseFree] = useState(false);\r\n  const [isVegan, setIsVegan] = useState(false);\r\n  const [isVegetarian, setIsVegetarian] = useState(false);\r\n\r\n  const saveFilters = useCallback(() => {\r\n    const appliedFilters = {\r\n      glutenFree: isGlutenFree,\r\n      lactoseFree: isLactoseFree,\r\n      vegan: isVegan,\r\n      vegetarian: isVegetarian,\r\n    };\r\n    console.log(appliedFilters);\r\n  }, [isGlutenFree, isLactoseFree, isVegan, isVegetarian]);\r\n\r\n  useEffect(() => {\r\n    navigation.setParams({ save: saveFilters });\r\n  }, [saveFilters, navigation]);\r\n\r\n  return (\r\n    <View style={styles.screen}>\r\n      <Text style={styles.title}>Filters</Text>\r\n      <FilterSwitch\r\n        label=\"Gluten Free\"\r\n        state={isGlutenFree}\r\n        onChange={(newValue) => setIsGlutenFree(newValue)}\r\n      />\r\n\r\n      <FilterSwitch\r\n        label=\"Lactose Free\"\r\n        state={isLactoseFree}\r\n        onChange={(newValue) => setIsLactoseFree(newValue)}\r\n      />\r\n\r\n      <FilterSwitch\r\n        label=\"Vegan\"\r\n        state={isVegan}\r\n        onChange={(newValue) => setIsVegan(newValue)}\r\n      />\r\n\r\n      <FilterSwitch\r\n        label=\"Vegetarian\"\r\n        state={isVegetarian}\r\n        onChange={(newValue) => setIsVegetarian(newValue)}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n\r\nFiltersScreen.navigationOptions = (navData) => {\r\n  return {\r\n    headerTitle: \"Filter Meals\",\r\n    headerLeft: (\r\n      <HeaderButtons HeaderButtonComponent={CustomHeaderButton}>\r\n        <Item\r\n          title=\"menu\"\r\n          iconName=\"ios-menu\"\r\n          onPress={() => {\r\n            navData.navigation.toggleDrawer();\r\n          }}\r\n        />\r\n      </HeaderButtons>\r\n    ),\r\n    headerRight: (\r\n      <HeaderButtons HeaderButtonComponent={CustomHeaderButton}>\r\n        <Item\r\n          title=\"save\"\r\n          iconName=\"ios-save\"\r\n          onPress={navData.navigation.getParams(\"save\")}\r\n        />\r\n      </HeaderButtons>\r\n    ),\r\n  };\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  screen: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n  },\r\n  title: {\r\n    fontFamily: \"open-sans-bold\",\r\n    fontSize: 22,\r\n    margin: 20,\r\n    textAlign: \"center\",\r\n  },\r\n  filterCon: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    width: \"80%\",\r\n    marginVertical: 10,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}