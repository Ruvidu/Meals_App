{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { HeaderButtons, Item } from \"react-navigation-header-buttons\";\nimport CustomHeaderButton from \"../components/HeaderButton\";\nimport colors from \"../constants/colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar FilterSwitch = function FilterSwitch(props) {\n  return _jsxs(View, {\n    style: styles.filterCon,\n    children: [_jsx(Text, {\n      children: props.label\n    }), _jsx(Switch, {\n      trackColor: {\n        true: colors.primaryColor\n      },\n      thumbColor: Platform.OS === \"android\" ? colors.primaryColor : \"\",\n      value: props.state,\n      onValueChange: props.onChange\n    })]\n  });\n};\n\nexport default function FiltersScreen() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isGlutenFree = _useState2[0],\n      setIsGlutenFree = _useState2[1];\n\n  return _jsxs(View, {\n    style: styles.screen,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Filters\"\n    }), _jsx(FilterSwitch, {\n      label: \"Gluten Free\",\n      state: isGlutenFree,\n      onChange: function onChange(newValue) {\n        return setIsGlutenFree(newValue);\n      }\n    })]\n  });\n}\n\nFiltersScreen.navigationOptions = function (navData) {\n  return {\n    headerTitle: \"Filter Meals\",\n    headerLeft: _jsx(HeaderButtons, {\n      HeaderButtonComponent: CustomHeaderButton,\n      children: _jsx(Item, {\n        title: \"menu\",\n        iconName: \"ios-menu\",\n        onPress: function onPress() {\n          navData.navigation.toggleDrawer();\n        }\n      })\n    })\n  };\n};\n\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    alignItems: \"center\"\n  },\n  title: {\n    fontFamily: \"open-sans-bold\",\n    fontSize: 22,\n    margin: 20,\n    textAlign: \"center\"\n  },\n  filterCon: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    width: \"80%\"\n  }\n});","map":{"version":3,"sources":["C:/ruvidu/r-native/meals-app/screens/FiltersScreen.js"],"names":["React","useState","HeaderButtons","Item","CustomHeaderButton","colors","FilterSwitch","props","styles","filterCon","label","true","primaryColor","Platform","OS","state","onChange","FiltersScreen","isGlutenFree","setIsGlutenFree","screen","title","newValue","navigationOptions","navData","headerTitle","headerLeft","navigation","toggleDrawer","StyleSheet","create","flex","alignItems","fontFamily","fontSize","margin","textAlign","flexDirection","justifyContent","width"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;AAEA,SAASC,aAAT,EAAwBC,IAAxB,QAAoC,iCAApC;AACA,OAAOC,kBAAP;AACA,OAAOC,MAAP;;;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAC9B,SACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA,eACE,KAAC,IAAD;AAAA,gBAAOF,KAAK,CAACG;AAAb,MADF,EAEE,KAAC,MAAD;AACE,MAAA,UAAU,EAAE;AAAEC,QAAAA,IAAI,EAAEN,MAAM,CAACO;AAAf,OADd;AAEE,MAAA,UAAU,EAAEC,QAAQ,CAACC,EAAT,KAAgB,SAAhB,GAA4BT,MAAM,CAACO,YAAnC,GAAkD,EAFhE;AAGE,MAAA,KAAK,EAAEL,KAAK,CAACQ,KAHf;AAIE,MAAA,aAAa,EAAER,KAAK,CAACS;AAJvB,MAFF;AAAA,IADF;AAWD,CAZD;;AAcA,eAAe,SAASC,aAAT,GAAyB;AACtC,kBAAwChB,QAAQ,CAAC,KAAD,CAAhD;AAAA;AAAA,MAAOiB,YAAP;AAAA,MAAqBC,eAArB;;AAEA,SACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEX,MAAM,CAACY,MAApB;AAAA,eACE,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEZ,MAAM,CAACa,KAApB;AAAA;AAAA,MADF,EAEE,KAAC,YAAD;AACE,MAAA,KAAK,EAAC,aADR;AAEE,MAAA,KAAK,EAAEH,YAFT;AAGE,MAAA,QAAQ,EAAE,kBAACI,QAAD;AAAA,eAAcH,eAAe,CAACG,QAAD,CAA7B;AAAA;AAHZ,MAFF;AAAA,IADF;AAUD;;AAEDL,aAAa,CAACM,iBAAd,GAAkC,UAACC,OAAD,EAAa;AAC7C,SAAO;AACLC,IAAAA,WAAW,EAAE,cADR;AAELC,IAAAA,UAAU,EACR,KAAC,aAAD;AAAe,MAAA,qBAAqB,EAAEtB,kBAAtC;AAAA,gBACE,KAAC,IAAD;AACE,QAAA,KAAK,EAAC,MADR;AAEE,QAAA,QAAQ,EAAC,UAFX;AAGE,QAAA,OAAO,EAAE,mBAAM;AACboB,UAAAA,OAAO,CAACG,UAAR,CAAmBC,YAAnB;AACD;AALH;AADF;AAHG,GAAP;AAcD,CAfD;;AAiBA,IAAMpB,MAAM,GAAGqB,UAAU,CAACC,MAAX,CAAkB;AAC/BV,EAAAA,MAAM,EAAE;AACNW,IAAAA,IAAI,EAAE,CADA;AAENC,IAAAA,UAAU,EAAE;AAFN,GADuB;AAK/BX,EAAAA,KAAK,EAAE;AACLY,IAAAA,UAAU,EAAE,gBADP;AAELC,IAAAA,QAAQ,EAAE,EAFL;AAGLC,IAAAA,MAAM,EAAE,EAHH;AAILC,IAAAA,SAAS,EAAE;AAJN,GALwB;AAW/B3B,EAAAA,SAAS,EAAE;AACT4B,IAAAA,aAAa,EAAE,KADN;AAETC,IAAAA,cAAc,EAAE,eAFP;AAGTN,IAAAA,UAAU,EAAE,QAHH;AAITO,IAAAA,KAAK,EAAE;AAJE;AAXoB,CAAlB,CAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { StyleSheet, Text, View, Switch, Platform } from \"react-native\";\r\nimport { HeaderButtons, Item } from \"react-navigation-header-buttons\";\r\nimport CustomHeaderButton from \"../components/HeaderButton\";\r\nimport colors from \"../constants/colors\";\r\n\r\nconst FilterSwitch = (props) => {\r\n  return (\r\n    <View style={styles.filterCon}>\r\n      <Text>{props.label}</Text>\r\n      <Switch\r\n        trackColor={{ true: colors.primaryColor }}\r\n        thumbColor={Platform.OS === \"android\" ? colors.primaryColor : \"\"}\r\n        value={props.state}\r\n        onValueChange={props.onChange}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default function FiltersScreen() {\r\n  const [isGlutenFree, setIsGlutenFree] = useState(false);\r\n\r\n  return (\r\n    <View style={styles.screen}>\r\n      <Text style={styles.title}>Filters</Text>\r\n      <FilterSwitch\r\n        label=\"Gluten Free\"\r\n        state={isGlutenFree}\r\n        onChange={(newValue) => setIsGlutenFree(newValue)}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n\r\nFiltersScreen.navigationOptions = (navData) => {\r\n  return {\r\n    headerTitle: \"Filter Meals\",\r\n    headerLeft: (\r\n      <HeaderButtons HeaderButtonComponent={CustomHeaderButton}>\r\n        <Item\r\n          title=\"menu\"\r\n          iconName=\"ios-menu\"\r\n          onPress={() => {\r\n            navData.navigation.toggleDrawer();\r\n          }}\r\n        />\r\n      </HeaderButtons>\r\n    ),\r\n  };\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  screen: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n  },\r\n  title: {\r\n    fontFamily: \"open-sans-bold\",\r\n    fontSize: 22,\r\n    margin: 20,\r\n    textAlign: \"center\",\r\n  },\r\n  filterCon: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    width: \"80%\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}